{"pages":[],"posts":[{"title":"복습day0617","text":"R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: 1summary(cars) 1234567## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 Including PlotsYou can also embed plots, for example: Note that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot. ggplot2 시각화 다음과 같이 시각화를 작성한다. 1234library(ggplot2)ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width)) + geom_point()","link":"/2022/06/20/day0617_1/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/06/20/hello-world/"},{"title":"test","text":"##csv파일 불러오기 csv파일을 불러옵니다 12mpg1 &lt;- read.csv(&quot;mpg1.csv&quot;)str(mpg1) 123456## 'data.frame': 234 obs. of 5 variables:## $ manufacturer: chr &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...## $ trans : chr &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...## $ drv : chr &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...## $ cty : int 18 21 20 21 16 18 18 18 16 20 ...## $ hwy : int 29 29 31 30 26 26 27 26 25 28 ... ##데이터 시각화 하기-cty, hwy산점도를 그려본다 123library(ggplot2)ggplot(mpg1,aes(x =cty, y = hwy))+ geom_point()","link":"/2022/06/20/test/"},{"title":"220621","text":"#220621에 한 일들.데이터 불러오기#경로 설정이 매우 중요#getwd()#현재 경로를 확인하는 함수#setwd(“C:/Users/human/Desktop/R_lecure/source/data”)#csv파일/엑셀파일 불어오기#오늘 할 일 P91 12mpg1&lt;-read.csv(&quot;mpg1.csv&quot;)mpg1 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235## manufacturer trans drv cty hwy## 1 audi auto f 18 29## 2 audi manual f 21 29## 3 audi manual f 20 31## 4 audi auto f 21 30## 5 audi auto f 16 26## 6 audi manual f 18 26## 7 audi auto f 18 27## 8 audi manual 4 18 26## 9 audi auto 4 16 25## 10 audi manual 4 20 28## 11 audi auto 4 19 27## 12 audi auto 4 15 25## 13 audi manual 4 17 25## 14 audi auto 4 17 25## 15 audi manual 4 15 25## 16 audi auto 4 15 24## 17 audi auto 4 17 25## 18 audi auto 4 16 23## 19 chevrolet auto r 14 20## 20 chevrolet auto r 11 15## 21 chevrolet auto r 14 20## 22 chevrolet auto r 13 17## 23 chevrolet auto r 12 17## 24 chevrolet manual r 16 26## 25 chevrolet auto r 15 23## 26 chevrolet manual r 16 26## 27 chevrolet auto r 15 25## 28 chevrolet manual r 15 24## 29 chevrolet auto 4 14 19## 30 chevrolet auto 4 11 14## 31 chevrolet auto 4 11 15## 32 chevrolet auto 4 14 17## 33 chevrolet auto f 19 27## 34 chevrolet auto f 22 30## 35 chevrolet auto f 18 26## 36 chevrolet auto f 18 29## 37 chevrolet auto f 17 26## 38 dodge auto f 18 24## 39 dodge auto f 17 24## 40 dodge auto f 16 22## 41 dodge auto f 16 22## 42 dodge auto f 17 24## 43 dodge auto f 17 24## 44 dodge auto f 11 17## 45 dodge auto f 15 22## 46 dodge auto f 15 21## 47 dodge auto f 16 23## 48 dodge auto f 16 23## 49 dodge manual 4 15 19## 50 dodge auto 4 14 18## 51 dodge auto 4 13 17## 52 dodge manual 4 14 17## 53 dodge auto 4 14 19## 54 dodge auto 4 14 19## 55 dodge auto 4 9 12## 56 dodge manual 4 11 17## 57 dodge auto 4 11 15## 58 dodge auto 4 13 17## 59 dodge auto 4 13 17## 60 dodge auto 4 9 12## 61 dodge auto 4 13 17## 62 dodge auto 4 11 16## 63 dodge auto 4 13 18## 64 dodge auto 4 11 15## 65 dodge manual 4 12 16## 66 dodge auto 4 9 12## 67 dodge auto 4 13 17## 68 dodge auto 4 13 17## 69 dodge manual 4 12 16## 70 dodge manual 4 9 12## 71 dodge auto 4 11 15## 72 dodge manual 4 11 16## 73 dodge auto 4 13 17## 74 dodge auto 4 11 15## 75 ford auto r 11 17## 76 ford auto r 11 17## 77 ford auto r 12 18## 78 ford auto 4 14 17## 79 ford manual 4 15 19## 80 ford auto 4 14 17## 81 ford auto 4 13 19## 82 ford auto 4 13 19## 83 ford auto 4 13 17## 84 ford auto 4 14 17## 85 ford manual 4 14 17## 86 ford manual 4 13 16## 87 ford auto 4 13 16## 88 ford auto 4 13 17## 89 ford auto 4 11 15## 90 ford auto 4 13 17## 91 ford manual r 18 26## 92 ford auto r 18 25## 93 ford manual r 17 26## 94 ford auto r 16 24## 95 ford auto r 15 21## 96 ford manual r 15 22## 97 ford manual r 15 23## 98 ford auto r 15 22## 99 ford manual r 14 20## 100 honda manual f 28 33## 101 honda auto f 24 32## 102 honda manual f 25 32## 103 honda manual f 23 29## 104 honda auto f 24 32## 105 honda manual f 26 34## 106 honda auto f 25 36## 107 honda auto f 24 36## 108 honda manual f 21 29## 109 hyundai auto f 18 26## 110 hyundai manual f 18 27## 111 hyundai auto f 21 30## 112 hyundai manual f 21 31## 113 hyundai auto f 18 26## 114 hyundai manual f 18 26## 115 hyundai auto f 19 28## 116 hyundai auto f 19 26## 117 hyundai manual f 19 29## 118 hyundai manual f 20 28## 119 hyundai auto f 20 27## 120 hyundai auto f 17 24## 121 hyundai manual f 16 24## 122 hyundai manual f 17 24## 123 jeep auto 4 17 22## 124 jeep auto 4 15 19## 125 jeep auto 4 15 20## 126 jeep auto 4 14 17## 127 jeep auto 4 9 12## 128 jeep auto 4 14 19## 129 jeep auto 4 13 18## 130 jeep auto 4 11 14## 131 land rover auto 4 11 15## 132 land rover auto 4 12 18## 133 land rover auto 4 12 18## 134 land rover auto 4 11 15## 135 lincoln auto r 11 17## 136 lincoln auto r 11 16## 137 lincoln auto r 12 18## 138 mercury auto 4 14 17## 139 mercury auto 4 13 19## 140 mercury auto 4 13 19## 141 mercury auto 4 13 17## 142 nissan manual f 21 29## 143 nissan auto f 19 27## 144 nissan auto f 23 31## 145 nissan manual f 23 32## 146 nissan manual f 19 27## 147 nissan auto f 19 26## 148 nissan auto f 18 26## 149 nissan manual f 19 25## 150 nissan auto f 19 25## 151 nissan auto 4 14 17## 152 nissan manual 4 15 17## 153 nissan auto 4 14 20## 154 nissan auto 4 12 18## 155 pontiac auto f 18 26## 156 pontiac auto f 16 26## 157 pontiac auto f 17 27## 158 pontiac auto f 18 28## 159 pontiac auto f 16 25## 160 subaru manual 4 18 25## 161 subaru auto 4 18 24## 162 subaru manual 4 20 27## 163 subaru manual 4 19 25## 164 subaru auto 4 20 26## 165 subaru auto 4 18 23## 166 subaru auto 4 21 26## 167 subaru manual 4 19 26## 168 subaru manual 4 19 26## 169 subaru auto 4 19 26## 170 subaru auto 4 20 25## 171 subaru auto 4 20 27## 172 subaru manual 4 19 25## 173 subaru manual 4 20 27## 174 toyota manual 4 15 20## 175 toyota auto 4 16 20## 176 toyota auto 4 15 19## 177 toyota manual 4 15 17## 178 toyota auto 4 16 20## 179 toyota auto 4 14 17## 180 toyota manual f 21 29## 181 toyota auto f 21 27## 182 toyota manual f 21 31## 183 toyota auto f 21 31## 184 toyota auto f 18 26## 185 toyota manual f 18 26## 186 toyota auto f 19 28## 187 toyota auto f 21 27## 188 toyota manual f 21 29## 189 toyota manual f 21 31## 190 toyota auto f 22 31## 191 toyota auto f 18 26## 192 toyota manual f 18 26## 193 toyota auto f 18 27## 194 toyota auto f 24 30## 195 toyota auto f 24 33## 196 toyota manual f 26 35## 197 toyota manual f 28 37## 198 toyota auto f 26 35## 199 toyota auto 4 11 15## 200 toyota auto 4 13 18## 201 toyota manual 4 15 20## 202 toyota auto 4 16 20## 203 toyota manual 4 17 22## 204 toyota manual 4 15 17## 205 toyota auto 4 15 19## 206 toyota manual 4 15 18## 207 toyota auto 4 16 20## 208 volkswagen manual f 21 29## 209 volkswagen auto f 19 26## 210 volkswagen manual f 21 29## 211 volkswagen auto f 22 29## 212 volkswagen manual f 17 24## 213 volkswagen manual f 33 44## 214 volkswagen manual f 21 29## 215 volkswagen auto f 19 26## 216 volkswagen auto f 22 29## 217 volkswagen manual f 21 29## 218 volkswagen auto f 21 29## 219 volkswagen manual f 21 29## 220 volkswagen auto f 16 23## 221 volkswagen manual f 17 24## 222 volkswagen manual f 35 44## 223 volkswagen auto f 29 41## 224 volkswagen manual f 21 29## 225 volkswagen auto f 19 26## 226 volkswagen manual f 20 28## 227 volkswagen auto f 20 29## 228 volkswagen manual f 21 29## 229 volkswagen auto f 18 29## 230 volkswagen auto f 19 28## 231 volkswagen manual f 21 29## 232 volkswagen auto f 16 26## 233 volkswagen manual f 18 26## 234 volkswagen auto f 17 26 1str(mpg1) 123456## 'data.frame': 234 obs. of 5 variables:## $ manufacturer: chr &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...## $ trans : chr &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...## $ drv : chr &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...## $ cty : int 18 21 20 21 16 18 18 18 16 20 ...## $ hwy : int 29 29 31 30 26 26 27 26 25 28 ... 1mean(mtcars$mpg)#평균 1## [1] 20.09062 1var(mtcars$mpg)#분산 1## [1] 36.3241 1sd(mtcars$mpg)#표준편차 1## [1] 6.026948 #기술통계-표준편차를 이용하여 그 데이터의 생김새를 상상할 수 있는 통계법#사분위수#IQR:1사분위수와 3사분위수#통계분석/머신러닝-&gt;왜곡된 이상치를 제거할 때 사용 1quantile(mtcars$mpg) 12## 0% 25% 50% 75% 100% ## 10.400 15.425 19.200 22.800 33.900 #통계 요약 구하기(p90) 1summary(iris) 1234567891011121314## Sepal.Length Sepal.Width Petal.Length Petal.Width ## Min. :4.300 Min. :2.000 Min. :1.000 Min. :0.100 ## 1st Qu.:5.100 1st Qu.:2.800 1st Qu.:1.600 1st Qu.:0.300 ## Median :5.800 Median :3.000 Median :4.350 Median :1.300 ## Mean :5.843 Mean :3.057 Mean :3.758 Mean :1.199 ## 3rd Qu.:6.400 3rd Qu.:3.300 3rd Qu.:5.100 3rd Qu.:1.800 ## Max. :7.900 Max. :4.400 Max. :6.900 Max. :2.500 ## Species ## setosa :50 ## versicolor:50 ## virginica :50 ## ## ## 1summary(iris$Sepal.Length) 12## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 4.300 5.100 5.800 5.843 6.400 7.900 1table(mpg1$trans) 123## ## auto manual ## 157 77 1table(mpg1$manufacturer) 1234567## ## audi chevrolet dodge ford honda hyundai jeep ## 18 19 37 25 9 14 8 ## land rover lincoln mercury nissan pontiac subaru toyota ## 4 3 4 13 5 14 34 ## volkswagen ## 27 1table(mpg1$trans,mpg1$manufacturer) 12345678## ## audi chevrolet dodge ford honda hyundai jeep land rover lincoln## auto 11 16 30 17 4 7 8 4 3## manual 7 3 7 8 5 7 0 0 0## ## mercury nissan pontiac subaru toyota volkswagen## auto 4 8 5 7 20 13## manual 0 5 0 7 14 14 #빈도의 비율 구하기 12a&lt;-table(mpg1$trans)prop.table(a) 123## ## auto manual ## 0.6709402 0.3290598 12b&lt;-table(mpg1$trans,mpg1$drv)prop.table(b) 1234## ## 4 f r## auto 0.32051282 0.27777778 0.07264957## manual 0.11965812 0.17521368 0.03418803 1prop.table(table(mpg1$manufacturer)) 1234567## ## audi chevrolet dodge ford honda hyundai jeep ## 0.07692308 0.08119658 0.15811966 0.10683761 0.03846154 0.05982906 0.03418803 ## land rover lincoln mercury nissan pontiac subaru toyota ## 0.01709402 0.01282051 0.01709402 0.05555556 0.02136752 0.05982906 0.14529915 ## volkswagen ## 0.11538462 #행과 열의 비율 형식 맞추기(각각의 행열을 1이되게) 1?prop.table 1## httpd 도움말 서버를 시작합니다 ... 완료 1prop.table(b,margin = 1)#행의 합이 1 1234## ## 4 f r## auto 0.4777070 0.4140127 0.1082803## manual 0.3636364 0.5324675 0.1038961 1prop.table(b,margin = 2)#열의 합이 1 1234## ## 4 f r## auto 0.7281553 0.6132075 0.6800000## manual 0.2718447 0.3867925 0.3200000 #소수점 아래 자리 지정 1round(0.322323,2)#round(정보값,자릿수) 1## [1] 0.32 1round(prop.table(table(mpg1$manufacturer)),2) 1234567## ## audi chevrolet dodge ford honda hyundai jeep ## 0.08 0.08 0.16 0.11 0.04 0.06 0.03 ## land rover lincoln mercury nissan pontiac subaru toyota ## 0.02 0.01 0.02 0.06 0.02 0.06 0.15 ## volkswagen ## 0.12 12a= table(mpg1$trans)a 123## ## auto manual ## 157 77 12b= prop.table(a)b 123## ## auto manual ## 0.6709402 0.3290598 1round(b,2) 123## ## auto manual ## 0.67 0.33 #시각화 이미지##보통은 ggplot2 패키지를 사용하지만 테이블 이미지를 이쁘게 사용하고 싶으면 gt table 패키지도 있다.고급","link":"/2022/06/21/220621/"},{"title":"220622","text":"라이브러리 불러오기1library(dplyr) 12## ## 다음의 패키지를 부착합니다: 'dplyr' 123## The following objects are masked from 'package:stats':## ## filter, lag 123## The following objects are masked from 'package:base':## ## intersect, setdiff, setequal, union 1library(ggplot2) 데이터 불러오기 데이터를 불러오세요 12exam_na &lt;- read.csv(&quot;data/exam_na.csv&quot;)str(exam_na) 123456## 'data.frame': 5 obs. of 5 variables:## $ id : int 1 2 3 4 5## $ sex : chr &quot;M&quot; &quot;F&quot; &quot;F&quot; &quot;M&quot; ...## $ korean : int 87 92 95 NA 87## $ english: int NA 95 92 84 NA## $ math : int 82 93 90 80 88 결측치 확인 후 빈도 구하기(1) 결측치 확인1is.na(exam_na) 123456## id sex korean english math## [1,] FALSE FALSE FALSE TRUE FALSE## [2,] FALSE FALSE FALSE FALSE FALSE## [3,] FALSE FALSE FALSE FALSE FALSE## [4,] FALSE FALSE TRUE FALSE FALSE## [5,] FALSE FALSE FALSE TRUE FALSE (2)결측치 빈도 구하기-table():빈도구하기 1table(is.na(exam_na)) 123## ## FALSE TRUE ## 22 3 1table(is.na(exam_na$korean)) 123## ## FALSE TRUE ## 4 1 1summary(is.na(exam_na)) 12345678## id sex korean english ## Mode :logical Mode :logical Mode :logical Mode :logical ## FALSE:5 FALSE:5 FALSE:4 FALSE:3 ## TRUE :1 TRUE :2 ## math ## Mode :logical ## FALSE:5 ## 1summary(exam_na) 12345678## id sex korean english math ## Min. :1 Length:5 Min. :87.00 Min. :84.00 Min. :80.0 ## 1st Qu.:2 Class :character 1st Qu.:87.00 1st Qu.:88.00 1st Qu.:82.0 ## Median :3 Mode :character Median :89.50 Median :92.00 Median :88.0 ## Mean :3 Mean :90.25 Mean :90.33 Mean :86.6 ## 3rd Qu.:4 3rd Qu.:92.75 3rd Qu.:93.50 3rd Qu.:90.0 ## Max. :5 Max. :95.00 Max. :95.00 Max. :93.0 ## NA's :1 NA's :2 결측치 처리 방법-제거하고 처리하기 -다른 값으로 대체하기 +평균입력 (1)결측치를 제외하고 분석하기 -p160 na.rm=T1mean(exam_na$korean,na.rm = T) 1## [1] 90.25 -na.omit() -결측치가 있는 행을 모두 제거 +가급적 쓰지 말것 -filter()활용 +is.na(korea) 1exam_na %&gt;% filter(is.na(korean)) 12## id sex korean english math## 1 4 M NA 84 80 -이번에는 !is.na(korean)을 적용한다 1exam_na %&gt;% filter(!is.na(korean)) 12345## id sex korean english math## 1 1 M 87 NA 82## 2 2 F 92 95 93## 3 3 F 95 92 90## 4 5 F 87 NA 88 (2) 결측치를 다른 값으로 대체하기 imputation 참고자료 A Solution to Missing Data: Imputation Using R R 결측값(NA) 제거, 대체 방법 이상치-데이터의 특정 값이 뭔가 “이상”이 있다. -case 1: 정해진 범주에서 벗어난 데이터 ex)2월 31일 -case 2: 숫자 /아웃라이어(outlier)/극단값 ex) 평균임금에서 삼성 이재용이 들어가면 안됨 12mpg1_out&lt;-read.csv(&quot;data/mpg1_out.csv&quot;)glimpse(mpg1_out) 12345## Rows: 234## Columns: 3## $ trans &lt;int&gt; 1, 2, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 3, 1, 1…## $ drv &lt;chr&gt; &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;f&quot;, &quot;4&quot;, &quot;4&quot;, &quot;4&quot;, &quot;4&quot;, &quot;4&quot;, &quot;5&quot;,…## $ cty &lt;int&gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17, 15, 15, … -trans의 빈도의갯수를 구하면 1이 몇개 2가 몇개 3이 몇개가 나온다 1table(mpg1_out$trans) 123## ## 1 2 3 ## 154 76 4 -만약 3을 그냥 제거하고 싶으면 다음과 같이 해도 된다. -mpg1_out %&gt;% filter(trans !=3) -ifelse란? -만약~라면 내가 무엇을 할 것이다.(가정법) -만약 trans의 값이 3이라면 결측치로 바꿔주세요.나머지는 그대로 유지하세요. 123mpg1_out$trans&lt;-ifelse(mpg1_out$trans == 3 ,NA ,mpg1_out$trans)table(is.na(mpg1_out$trans)) 123## ## FALSE TRUE ## 230 4 -결측치 제거 12result &lt;-mpg1_out %&gt;% filter(!is.na(trans))table(is.na(result$trans)) 123## ## FALSE ## 230 극단치 처리-숫자 데이터 boxplot() -boxlot() 함수를 통해서 극단치가 있는지 없는지 확인 가능 -IQR:3사분위-1사분위 -경계값:IQR+IQR1.5 상한/IQR-IQR1.5 123mpg1&lt;- read.csv(&quot;data/mpg1.csv&quot;)boxplot(mpg1$cty)boxplot(mpg1$cty)$stats 123456## [,1]## [1,] 9## [2,] 14## [3,] 17## [4,] 19## [5,] 26","link":"/2022/06/22/day0622/"},{"title":"0623","text":"복습-iris 데이터, sepal.length, sepal. width활용해서 종별로 산점도를 그리세요-제목과 x축 y축 제목을 변경하세요. +x축 길이 , y축 너비 12library(ggplot2)str(iris) 123456## 'data.frame': 150 obs. of 5 variables:## $ Sepal.Length: num 5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...## $ Sepal.Width : num 3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...## $ Petal.Length: num 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...## $ Petal.Width : num 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...## $ Species : Factor w/ 3 levels &quot;setosa&quot;,&quot;versicolor&quot;,..: 1 1 1 1 1 1 1 1 1 1 ... 1234567891011121314ggplot(iris, aes( x = Sepal.Length, y = Sepal.Width, colour =Species))+ geom_point()+ labs( title =&quot; 제목&quot;, x = &quot;길이&quot;, y = &quot;너비&quot;, )+ scale_color_manual( labels = c(&quot;setosa&quot;,&quot;versicolor&quot;,&quot;virginica&quot;), values = c(&quot;pink&quot;,&quot;orange&quot;,&quot;blue&quot;) )+ theme_classic() – 색깔을 부꿀 수 있는 명령어 scale_color_manual– 테마를 바꾸는 옵션 theme_classic()-&gt; 농도가 각각 다르게 함.– ggstatsplot라는 것도 통계그림 그리기에 좋음 통계 기술통계 :평균, 최촛값, 최댓값, 중간값 추론통계 : 변수간의 관계를 파악/새로운 사실을 발견(추정)+평균차이 검정 -수치데이터 -가설검정 : 평균의 차이를 검정 -남자의 평균 키와 여자의 평균 키는 차이가 있을 것이다. (남자 여자라는 그룹을 평균을 기준으로 비교 ) +교차분석(빈도분석) -범주 데이터 -가설검정 : 각 범주별 빈도를 활용하여 관계성을 검정 +상관관계 분석 -수치 데이터 -변수사이의 연관성을 수치로 표현 +단순 회귀분석 -y(종속변수)= a(기울기=회기계수)x(독립변수)+b(절편=상수항:의미없음) -가설검정-&gt;기온x(독립변수)이 판매량y(종속변수)에 긍정적(+)a영향을 준다.+다중 회귀분석 -y=a1x1+a2x2+a3x3….+b 통계 검정 P176 가설 -hypothesis –&gt;공부방법: 선행연구, 해당분석방법의 가설 설정 예시를 보고 연습 -연구:내가 궁금한 것을 찾는 것 ex)남자와 여자의 평균키가 차이가 있다. -귀무가설:궁금한 것의 반대내용(ex.남여 평균키 차이가 없다.) -대립가설:궁금한 사항이 여기로 옴(ex.남여 평균키 차이가 있다) -가설 검정에서 인정하는 유의 수준:5%,1%,0.1% 또는 10% -오차 범위 내에 있으면 차이가 크지 않음. 오차 범위 밖에 있으면 결과가 결정됨.(신뢰수준&lt;-&gt;유의수준) -유의수준&gt;0.05가 넘으면 데이터의 의미가 없어진다.귀무가설 실패 t.test-어떻게 데이터를 입력하는지 확인-p-value, 유의수준 0.05이상: 귀무가설(p&gt;0.05) 0.05이내: 대립가설(p&lt;0.05) 12mpg1&lt;-read.csv(&quot;data/mpg1.csv&quot;,stringsAsFactors = F)str(mpg1) 123456## 'data.frame': 234 obs. of 5 variables:## $ manufacturer: chr &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; &quot;audi&quot; ...## $ trans : chr &quot;auto&quot; &quot;manual&quot; &quot;manual&quot; &quot;auto&quot; ...## $ drv : chr &quot;f&quot; &quot;f&quot; &quot;f&quot; &quot;f&quot; ...## $ cty : int 18 21 20 21 16 18 18 18 16 20 ...## $ hwy : int 29 29 31 30 26 26 27 26 25 28 ... -시각화 +여기서는 큰 차이를 알 수가 없다. 123library(ggplot2)ggplot(mpg1, aes(x = trans, y = cty)) + geom_boxplot() -t.test 검정 +귀무가설 :auto와 manual의 cty평균은 차이가 없다. +대립가설 :auto와 manual의 cty평균은 차이가 있다. 1t.test(data = mpg1, cty ~ trans) 1234567891011## ## Welch Two Sample t-test## ## data: cty by trans## t = -4.5375, df = 132.32, p-value = 1.263e-05## alternative hypothesis: true difference in means between group auto and group manual is not equal to 0## 95 percent confidence interval:## -3.887311 -1.527033## sample estimates:## mean in group auto mean in group manual ## 15.96815 18.67532 1#종속변수 ~ 독립변수 Y ~ X 반응변수 ~ 설명변수 –시각화한 것은 차이를 모르겠지만 통계를 통해 차이가 있음을 알 수 있다.(대립가설 성립)P-value&lt;0.5 -cf..두 그룹의 평균 차이 검정하기 전에 +사전 필수 검증요소가 있다.바로 등분산 검정 +등분산 검정 -&gt;두 그룹간의 분산이 비슷하면 –&gt;t.test(모수검정) -&gt;두 그룹간의 분산이 다르면–&gt;(비모수검정) -&gt;귀무가설: 두 그룹간의 분산이 비슷하다 p.value&gt;0.05 -&gt;대립가설: 두 그룹간의 분산이 다르다. 1var.test(data =mpg1, cty~trans) 1234567891011## ## F test to compare two variances## ## data: cty by trans## F = 0.73539, num df = 156, denom df = 76, p-value = 0.1101## alternative hypothesis: true ratio of variances is not equal to 1## 95 percent confidence interval:## 0.4912917 1.0719468## sample estimates:## ratio of variances ## 0.7353887 p.value&gt;0.05이므로 귀무가설 성립. 등분산으로 본다. -시각화 123ggplot(mpg1, aes(x = cty, fill = trans)) + # geom_histogram() + geom_density(alpha = 0.1) 교차 분석 -범주형 변수들이 관계가 있다는 것을 검정 -비율에 차이가 있는 지 검정 -교차분석 검정은 R의 chisq.test()함수로 진행 -귀무가설: tras에 따라 drv(4,f,r)의 (비율)차이가 없다. -대립가설: tras에 따라 drv의 차이가 있다. -빈도표/비율 -1빈도표 1table(mpg1$trans,mpg1$drv)#교차분석석 1234## ## 4 f r## auto 75 65 17## manual 28 41 8 -2비율 1prop.table(table(mpg1$trans,mpg1$drv),1) 1234## ## 4 f r## auto 0.4777070 0.4140127 0.1082803## manual 0.3636364 0.5324675 0.1038961 -auto 4륜구동이 47% -manual 전륜구동이 53% 가장 많음 -실제로 통계적으로 봤을 때 차이가 있는지 검정 -귀무가설: tras에 따라 drv(4,f,r)의 (비율)차이가 없다. -대립가설: tras에 따라 drv의 차이가 있다. 1chisq.test(mpg1$trans,mpg1$drv) 12345## ## Pearson's Chi-squared test## ## data: mpg1$trans and mpg1$drv## X-squared = 3.1368, df = 2, p-value = 0.2084 p.value&gt;0.05이므로 귀무가설 성립. 차이가 없다.","link":"/2022/06/23/day0623/"},{"title":"0624","text":"복습 -통계검정 평균차이검정 :(두그룹간의)수치데이터&amp;범주데이터-&gt;세그룹이상 평균 차이 검정(중급이상이라면) 비율차이검정(교차분석) :범주 데이터 상관관계 :수치 데이터 회귀 -통계검정을 할 때는 분석을 위한 데이터가 적절한지 검정 등분산 검정, 수치 데이터가 정규분포를 이루는가?(정규성 검정) -귀무가설 , 대립가설을 적절하게 설정 서울이 부산보다 잘산다(X)-&gt;서울의 평균임금과 부산의 평균임금이 차이가 있다. 선행연구(논문등)을 찾아 응용 -테스트 실시 +함수 t.test, chisq.test, cor.test를 통해 P.value를 찾음 +P.value -&gt;P.value&gt;0.5–&gt;귀무가설 지지 -&gt;P.value&lt;0.5–&gt;대립가설 지지 ##회귀분석(p.184) 회귀가 재일 중요하다~ 기초통계 : 특정한 결과에 영향을 주는 주 요인이 무엇인가? 이걸 찾는 것이 회귀 회귀분석과 종류 1세대 회귀 방법론: 다항회귀분석, 다중회귀분석, 포아송 회귀분석 등 2세대 회귀 방법론: 구조방정식 귀무가설 &amp; 대립가설 존재 귀무가설 : x(=독립변수)가 y(=종속변수)에 영향을 주지 않는다. 대립가설 : x가 y에 영향을 준다 -lm(종속변수~독립변수, data)-&gt;p.185 p.value로 대립가설을 확인 anova(분산분석)y=ax+b+a1x1+a2x2+a3x3….. 실무에서는 독립변수x1를 계속 변경해봐서 대립가설이 되는지 여부를 찾아본다.-&gt; 독립변수가 너무 많으면 전진소거법,후진소거법을 사용한다. R_Squared(결정계수)=설명력 = 0~1 -&gt;1로 수렴할 수록 설명력이 좋다. 123RA &lt;- lm(data=mtcars,mpg ~ disp)summary(RA) 123456789101112131415161718## ## Call:## lm(formula = mpg ~ disp, data = mtcars)## ## Residuals:## Min 1Q Median 3Q Max ## -4.8922 -2.2022 -0.9631 1.6272 7.2305 ## ## Coefficients:## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 29.599855 1.229720 24.070 &lt; 2e-16 ***## disp -0.041215 0.004712 -8.747 9.38e-10 ***## ---## Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1## ## Residual standard error: 3.251 on 30 degrees of freedom## Multiple R-squared: 0.7183, Adjusted R-squared: 0.709 ## F-statistic: 76.51 on 1 and 30 DF, p-value: 9.38e-10 -머신러닝, 인공지능 주 목적은 예측 Y= aX+b","link":"/2022/06/24/day0624/"},{"title":"파이선 기초문법:::","text":"Hello World 1print (&quot;Hello World&quot;) Hello World 주석처리 1줄 주석, 여러줄 주석처리: 여러줄 주석 처리 함수 또는 클래스를 문서화 할때 주로 사용 프로잭트 할 때 전체 공정100 코드 / 코드 문서화 / 한글작업 문서화 12345678910# print()함수 사용print(&quot;1줄주석&quot;)&quot;&quot;&quot;&quot;여러 줄의 주석에는 쌍따옴표 3개를 입력해주세요앞과 뒤로&quot;&quot;&quot;print(&quot;여러줄 주석&quot;) 1줄주석 여러줄 주석 변수 (Scalar) 자료형 Scalar형 Non-Scalar형 수치형 자료형 int, float 1234num_int =1print(num_int)print(type(num_int)) 1 &lt;class 'int'&gt; 1234num_float =0.1print(num_float)print(type(num_float)) 0.1 &lt;class 'float'&gt; Bool형 True,False cf)R: TRUE, FALSE 123bool_true =Trueprint(bool_true)print(type(bool_true)) True &lt;class 'bool'&gt; None 자료형 Null값- 값이 정해지지 않은 자료형 123none_x= Noneprint(none_x)print(type(none_x)) None &lt;class 'NoneType'&gt; 사칙연산 정수형 사칙연산, 실수형 사칙연산 결괏값의 자료형 정수형 사칙연산 +.-,*,/ 단 정수형 나누기는 실수형으로 바뀐다 123456a = 3b = 2print('a+b=',a+b)print('a-b=',a-b)print('a*b=',a*b)print('a/b=',a/b) a+b= 5 a-b= 1 a*b= 6 a/b= 1.5 실수형 사칙연산123456a = 1.5b = 2.5print('a+b=', a+b)print('a-b=',a-b)print('a*b=',a*b)print('a/b=',a/b) a+b= 4.0 a-b= -1.0 a*b= 3.75 a/b= 0.6 논리형 연산자 bool형 True와 False 값으로 정의 조건식 교집합(=and), 합집합(=or) 1234print(True and True)print(True and False)print(False and True)print(False and False) True False False False 1234print(True or True)print(True or False)print(False or True)print(False or False) True True True False 비교 연산자 비교연산자는 부등호를 의미한다. 1234print(4&gt;3) #참 = Trueprint(4&lt;3) #거짓 = Falseprint(4&gt;3 or 4&lt;3) # False True False True 논리형 &amp; 비교 연산자 응용 input() 형변환 데이터 타입을 바꾸는 것 123var = input(&quot;숫자를 입력하세요!&quot;)print(var)print(type(var)) 숫자를 입력하세요!3 3 &lt;class 'str'&gt; 123var = int(input(&quot;숫자를 입력하세요!&quot;))print(var)print(type(var)) 숫자를 입력하세요!1 1 &lt;class 'int'&gt; –계산이 안될 때 타입을 확인해보고 숫자로 형변환 해주세요 1234num1 = int(input(&quot;첫번째 숫자를 입력하세요.&quot;))num2 = int(input(&quot;두번째 숫자를 입력하세요.&quot;))num3 = int(input(&quot;세번째 숫자를 입력하세요.&quot;))num4 = int(input(&quot;네번째 숫자를 입력하세요.&quot;)) 첫번째 숫자를 입력하세요.40 두번째 숫자를 입력하세요.50 세번째 숫자를 입력하세요.60 네번째 숫자를 입력하세요.70 12var1 = num1 &lt;= num2 var2 = num3 &gt; num4 12print( var1 and var2) False String Non Scalar 12345print('hello World')print(&quot;hello World&quot;)print(&quot;'hello World'&quot;)print('&quot;hello World&quot;') hello World hello World 'hello World' &quot;hello World&quot; String Operators 문자열 연산자 +, * 가능 123str1 = &quot;Hello &quot;str2 = &quot;World &quot;print(str1 + str2) Hello World 12greet = str1 + str2print(greet * 2) Hello World Hello World 문자열 인덱싱 인덱싱은 0번째부터 시작 123greeting='hello kaggle'print(greeting)print(greeting[0]) hello kaggle h 123greeting= &quot;hello kabble&quot;i=int(input(&quot;숫자를 입력하세요&quot;))print(greeting[i]) 숫자를 입력하세요3 l 슬라이싱123456789greeting = &quot;hello kaggle&quot;#print(greeting[시작인덱스:끝인덱스-1])print(greeting[0:2])print(greeting[0:8])print(greeting[:8])print(greeting[6:8])print(greeting[0:10:2])print(greeting[0:10:3])print(greeting[0:10:4]) he hello ka hello ka ka hlokg hlkg hog 123alphabet_letter = &quot;1234567890qbcde&quot;print(alphabet_letter[0:14:2])print(alphabet_letter[0:14:3]) 13579qc 1470c 인덱스가 넘어갈때 뜨는 에러 메세지 12greeting = &quot;hello Kabble&quot;print(greeting[100]) --------------------------------------------------------------------------- IndexError Traceback (most recent call last) &lt;ipython-input-84-40fb216685e4&gt; in &lt;module&gt;() 1 greeting = &quot;hello Kabble&quot; ----&gt; 2 print(greeting[100]) IndexError: string index out of range 문자열 관련 메서드 split() sort() etc 리스트 [] (대괄호)로 표시 [item1, item2, item3..] 1234567a = []#빈 리스트a_func = list() # 빈 리스트 생성b= [1] #숫자요소c=['apple'] #문자요소d = [1,2,['apple'],'apple']#리스트 자체를 리스트 요소로 만들 수도 있다print(a,b,c)print(d) [] [1] ['apple'] [1, 2, ['apple'], 'apple'] 리스트 값 수정하기 리스트 값 수정 123a =[ 0,1,2]a[0] = &quot;아무값&quot;print (a) ['아무값', 1, 2] 메서드 사용 123456789a = [100, 200, 300]a.append(400)print(a)a.append([500,600])print(a)a.extend([700,800])print(a) [100, 200, 300, 400] [100, 200, 300, 400, [500, 600]] [100, 200, 300, 400, [500, 600], 700, 800] insert(인덱스 위치, 값) 123a = [100,200,300 ]a.insert(1,1000)print(a) [100, 1000, 200, 300] remover() 리스트에서 첫 번째로 나오는 x를 삭제하는 함수이다 123a = [1,2,1,2]a.remove(1)print(a) [2, 1, 2] del 123456a = [0,1,2,3,4,5,6,7,8,9]del a[1]print(a)del a[0:2]print(a) [0, 2, 3, 4, 5, 6, 7, 8, 9] [3, 4, 5, 6, 7, 8, 9] pop() : pop()은 리스트의 맨 마지막 요소를 돌려주고 그 요소는 삭제한다 1234567a = [1,2,3,4,5]rem = a.pop(1)print(a)print(rem)x = a.pop()print(a)print(x) [1, 3, 4, 5] 2 [1, 3, 4] 5 clear() : 리스트 내 모든 값 삭제 index(“값”) : 값의 위치를 불러옴 1234a= [1,4,5,2,3]b= [&quot;철수&quot;,&quot;영희&quot;,&quot;길동&quot;]print(a.index(3))print(b.index(&quot;영희&quot;)) 4 1 sort : 리스트의 정렬 123456a= [1,4,5,2,3]a.sort()print(a)help(list.sort)#help(list.index) [1, 2, 3, 4, 5] Help on method_descriptor: sort(self, /, *, key=None, reverse=False) Stable sort *IN PLACE*. 튜플 면접질문 :리스트와 튜플의 차이가 뭔가요? 형태로 리스트는 [ ]으로 둘러싸지만 튜플은 ( )으로 둘러싼다. 리스트는 그 값의 생성, 삭제, 수정이 가능하지만 튜플은 그 값을 바꿀 수 없다 1234567891011tuple1 = (0)tuple2 = (0,)tuple3 = 0, 1, 2print(type(tuple1))print(type(tuple2))print(type(tuple2))print(tuple1)print(tuple2)print(tuple3) &lt;class 'int'&gt; &lt;class 'tuple'&gt; &lt;class 'tuple'&gt; 0 (0,) (0, 1, 2) 튜플은 소가로()가 있고 ,(쉼표)가 있다. 정수는 숫자만 있다. 123a = (0,1,2,3,'a')#del a[4]#print(a)-&gt;에러가 뜨며 tuple' object doesn't support item deletion 튜플(=리스트)연산자 문자열 연산자 +, * 1234t1 = (0,1,2)t2 = (3,4,5)print(t1 +t2)print(t1 * 2) (0, 1, 2, 3, 4, 5) (0, 1, 2, 0, 1, 2) 딕셔너리 Dictionary 키(Key)와 값(value)으로 구성됨 슬라이싱!= (값의 순서가 존재해야 됨) 그러나 딕셔너리는 순서라는 개념자체가 존재하지 않기에 슬라이싱이 안됨(cf.0부터 시작된다는 개념 자체도 없으니 조심) 1234567891011temp_dict = { #'키' : '값' 'teacher' : 'evan', 'class' : 15, 'students' : ['s1', 's2','s3']}print(temp_dict[&quot;teacher&quot;])print(temp_dict['class'])print(temp_dict['students']) evan 15 ['s1', 's2', 's3'] key()값만 출 1list(temp_dict.keys()) ['teacher', 'class', 'students'] values()값만 출 1temp_dict.values() dict_values(['evan', 15, ['s1', 's2', 's3']]) items() key-value 쌍으로, list와 tuple 형태로 반환 1temp_dict.items() dict_items([('teacher', 'evan'), ('class', 15), ('students', ['s1', 's2', 's3'])]) 조건문 잊지말고 :를 찍으세요 123456789a = int(input(&quot;숫자를 입력하세요&quot;))if a&gt;5: print(&quot;a는 5보다 크다&quot;)elif a&gt;0: print(&quot;a는 0보다 크다&quot;)elif a&gt;-5: print(&quot;a는 -5보다 크다&quot;)else: print(&quot;a는 매우 작다&quot;) 숫자를 입력하세요2 a는 0보다 크다 반복문1234#Hello World 3번 출력하세요for idx in range(3): print(idx+1) print(&quot;Hello World, &quot;) 1 Hello World, 2 Hello World, 3 Hello World, 123#가독성이 좋게 하려고 인덱스의 숫자를 앞에 넣을 수도 있다.for idx in range(3): print(idx+1,&quot;Hello World, &quot;) 1 Hello World, 2 Hello World, 3 Hello World, for loop if 조건문 사용 문자열 ,리스트 등–&gt;시퀀스 데이터(반복문 사용가능) 123456a= &quot;kaggle&quot;# g가 시작하면 반복문을 멈추세요&quot;for x in a: print(x) if x== 'g': break k a g 123456a= &quot;kaggle&quot;# print(x)의 위치에 따라 출력이 달라진다&quot;for x in a: if x== 'g': breakprint(x) g enumerate() 123alphabets = ['A','B','c']for index, value in enumerate(alphabets): print(index,value) 0 A 1 B 2 c 리스트 컴프리헨션(list comprehension) 1&quot;a&quot; in &quot;kiwi&quot; False 123456789fruits = ['apple','kiwi','mango']newlists= []#알파벳 a가 있는 과일만 추출 후 새로운 리스트에 담기for fruit in fruits: #print(fruit) if &quot;a&quot; in fruit : newlists.append(fruit)print(newlists) ['apple', 'mango'] 123#리스트 컴프리헨션으로 표현하면newlist = [fruit for fruit in fruits if 'a' in fruit]print(newlist) ['apple', 'mango']","link":"/2022/06/27/day0627/"}],"tags":[],"categories":[]}